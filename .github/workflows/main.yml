

name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CSV_URL: "MLproject/train_pca.csv"
  TARGET_VAR: "Credit_Score"
  n_estimators: 505
  max_depth: 37
  RANDOM_STATE: 42

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3

      # Setup Python 3.12.7
      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"
      
      # Check Env Variables
      - name: Check Env
        run: |
          echo $CSV_URL

      # Install mlflow
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow
      
      # Run as a mlflow project
      - name: Run mlflow project
        run: |
          mlflow run MLproject --env-manager=local 
      

      - name: Install Python dependencies
        run: |
          pip install --upgrade google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client
        
      - name: Upload to Google Drive
        env:
          GDRIVE_CREDENTIALS: ${{ secrets.GDRIVE_CREDENTIALS }}
        run: |
          python - <<EOF
          from googleapiclient.discovery import build
          from googleapiclient.http import MediaFileUpload
          import json
      
          # Load credentials
          creds = json.loads("${{ secrets.GDRIVE_CREDENTIALS }}")
      
          # Build Drive service
          service = build('drive', 'v3', credentials=creds)
      
          # Upload a folder
          folder_metadata = {'name': 'mlruns', 'mimeType': 'application/vnd.google-apps.folder'}
          folder = service.files().create(body=folder_metadata, fields='id').execute()
      
          # Iterate through files and upload
          import os
          folder_id = folder.get('id')
          for root, _, files in os.walk('./mlruns'):
              for name in files:
                  file_path = os.path.join(root, name)
                  file_metadata = {'name': name, 'parents': [folder_id]}
                  media = MediaFileUpload(file_path, resumable=True)
                  service.files().create(body=file_metadata, media_body=media, fields='id').execute()
          EOF
            
      # - name: Set up Git LFS
      #   run: |
      #     git config --global user.name ${{ secrets.username }}
      #     git config --global user.email ${{ secrets.email }}
      #     git lfs install
      #     git lfs track "mlruns/**"
      #     git add .gitattributes
      #     git commit -m "Track large files in mlruns with Git LFS" || true
      #     git push origin main
          
      # # Save models to GitHub Repository
      # - name: Save mlruns to repo
      #   run: |
      #     git config --global user.name ${{ secrets.username }}
      #     git config --global user.email ${{ secrets.email }}
      #     git add -f mlruns/
      #     git commit -m "Save mlruns from CI run" || true
      #     git push origin main
